{
  "kind": "Listing",
  "data": {
    "after": "t3_psmtd7",
    "dist": 25,
    "modhash": "7zoejr36o1c393ed7ed5ed97937d0ec768e57c5e297eb4c856",
    "geo_filter": null,
    "children": [
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "For pattern matching, what does it do and what is it use for. In what situation is when I should use pattern matching. An example will be greatly appreciated.",
          "author_fullname": "t2_4fdrtd5t",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Question (I'm new to Ocaml)",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_qa76q4",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 3,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 3,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1634503120.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;For pattern matching, what does it do and what is it use for. In what situation is when I should use pattern matching. An example will be greatly appreciated.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "qa76q4",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "Bros_Bef0re_Hoes",
          "discussion_type": null,
          "num_comments": 3,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/qa76q4/question_im_new_to_ocaml/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/qa76q4/question_im_new_to_ocaml/",
          "subreddit_subscribers": 8774,
          "created_utc": 1634503120.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "Hi, I'm new to Ocaml so I wondering if you can tell what does h::t -&gt; means for example.\n\n**let rec** remove\\_at n = function     \n\n| \\[\\] -&gt; \\[\\]     \n\n| h :: t -&gt; if n = 0 then t else h :: remove\\_at (n - 1) t;;",
          "author_fullname": "t2_4fdrtd5t",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Question",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_q9pflf",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.6,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 2,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 2,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1634435737.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, I&amp;#39;m new to Ocaml so I wondering if you can tell what does h::t -&amp;gt; means for example.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;let rec&lt;/strong&gt; remove_at n = function     &lt;/p&gt;\n\n&lt;p&gt;| [] -&amp;gt; []     &lt;/p&gt;\n\n&lt;p&gt;| h :: t -&amp;gt; if n = 0 then t else h :: remove_at (n - 1) t;;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "q9pflf",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "Bros_Bef0re_Hoes",
          "discussion_type": null,
          "num_comments": 2,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/q9pflf/question/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/q9pflf/question/",
          "subreddit_subscribers": 8774,
          "created_utc": 1634435737.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "One of my favorite algorithms to demonstrate the advantages of lazy fp is the wheel factorization algorithm.\n\nIn Python, translating pretty directly from Wikipedia pseudocode it looks like this:\n\n    def wheel_factor(n: int) -&gt; int:\n        inc = [4, 2, 4, 2, 4, 6, 2, 6]\n\n        for prime in [2, 3, 5, 7, 11]:\n            if n % prime == 0:\n                return prime\n\n        test = False\n\n        k, i = 7, 0\n        while not test and k * k &lt;= n:\n            test = n % k == 0\n            if test: return k\n            k += inc[i]\n            i = i + 1 if i &lt; 7 else 0\n        return n\n\nIn Haskell, it's a lot clearer to understand, since infinitely cycling a list\nis really easy:\n\n    wheelFactor :: Int -&gt; Int\n    wheelFactor n = \n        fromMaybe n $ find ((==0) . rem n) (takeWhile ((&lt;= n) . (^2)) testLS)\n             where testLS = 2 : 3 : 5 : 7 : zipWith (+) (cycle incr) (drop 3 testLS)\n                  incr = [4, 2, 4, 2, 4, 6, 2, 6]\n\nI've started learning OCaml just yesterday and I'm wondering what the idiomatic way to write this algorithm is. I tried doing it the Haskell way with Streams but I don't think it will work similarly. It would probably pretty simple to translate the Python to pure OCaml by turning the loops into functions, but I'm sure there's a better way.\n\nCan anyone give an example?\n\nedit: fixed haskell",
          "author_fullname": "t2_3f2j6fr7",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Idiomatic wheel factorization algorithm in OCaml?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_q9gi5m",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 10,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 10,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": 1634448591.0,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1634405340.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;One of my favorite algorithms to demonstrate the advantages of lazy fp is the wheel factorization algorithm.&lt;/p&gt;\n\n&lt;p&gt;In Python, translating pretty directly from Wikipedia pseudocode it looks like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def wheel_factor(n: int) -&amp;gt; int:\n    inc = [4, 2, 4, 2, 4, 6, 2, 6]\n\n    for prime in [2, 3, 5, 7, 11]:\n        if n % prime == 0:\n            return prime\n\n    test = False\n\n    k, i = 7, 0\n    while not test and k * k &amp;lt;= n:\n        test = n % k == 0\n        if test: return k\n        k += inc[i]\n        i = i + 1 if i &amp;lt; 7 else 0\n    return n\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In Haskell, it&amp;#39;s a lot clearer to understand, since infinitely cycling a list\nis really easy:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;wheelFactor :: Int -&amp;gt; Int\nwheelFactor n = \n    fromMaybe n $ find ((==0) . rem n) (takeWhile ((&amp;lt;= n) . (^2)) testLS)\n         where testLS = 2 : 3 : 5 : 7 : zipWith (+) (cycle incr) (drop 3 testLS)\n              incr = [4, 2, 4, 2, 4, 6, 2, 6]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;ve started learning OCaml just yesterday and I&amp;#39;m wondering what the idiomatic way to write this algorithm is. I tried doing it the Haskell way with Streams but I don&amp;#39;t think it will work similarly. It would probably pretty simple to translate the Python to pure OCaml by turning the loops into functions, but I&amp;#39;m sure there&amp;#39;s a better way.&lt;/p&gt;\n\n&lt;p&gt;Can anyone give an example?&lt;/p&gt;\n\n&lt;p&gt;edit: fixed haskell&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "q9gi5m",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "Fish_45",
          "discussion_type": null,
          "num_comments": 3,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/q9gi5m/idiomatic_wheel_factorization_algorithm_in_ocaml/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/q9gi5m/idiomatic_wheel_factorization_algorithm_in_ocaml/",
          "subreddit_subscribers": 8774,
          "created_utc": 1634405340.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "Is it possible to hide one GWindow and show another when a GButton is clicked?",
          "author_fullname": "t2_bjdlodw7",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Using OCaml LabLGTK2 GButton Click Callback to switch displayed window",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_q9mbgv",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 2,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 2,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1634424152.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Is it possible to hide one GWindow and show another when a GButton is clicked?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "q9mbgv",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "olivertaunt2023",
          "discussion_type": null,
          "num_comments": 0,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/q9mbgv/using_ocaml_lablgtk2_gbutton_click_callback_to/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/q9mbgv/using_ocaml_lablgtk2_gbutton_click_callback_to/",
          "subreddit_subscribers": 8774,
          "created_utc": 1634424152.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "If you use Ocaml on an M1 Mac, how do you think it is the experience? I'm planning on buying the new Mac 16\" that is about to be released, but I would like some feedback about it with Ocaml.",
          "author_fullname": "t2_3qdsf8d9",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Ocaml on M1 Mac?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_q6ntw5",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 14,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 14,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1634050058.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;If you use Ocaml on an M1 Mac, how do you think it is the experience? I&amp;#39;m planning on buying the new Mac 16&amp;quot; that is about to be released, but I would like some feedback about it with Ocaml.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "q6ntw5",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "Fede_Rama",
          "discussion_type": null,
          "num_comments": 4,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/q6ntw5/ocaml_on_m1_mac/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/q6ntw5/ocaml_on_m1_mac/",
          "subreddit_subscribers": 8774,
          "created_utc": 1634050058.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "",
          "author_fullname": "t2_9ojru",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "The OCaml Weekly News for 2021-10-12 are out",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_q6l8ig",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 21,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 21,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1634042284.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "alan.petitepomme.net",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "url_overridden_by_dest": "https://alan.petitepomme.net/cwn/2021.10.12.html",
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "q6l8ig",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "brabarb",
          "discussion_type": null,
          "num_comments": 0,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/q6l8ig/the_ocaml_weekly_news_for_20211012_are_out/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://alan.petitepomme.net/cwn/2021.10.12.html",
          "subreddit_subscribers": 8774,
          "created_utc": 1634042284.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "**Note!** This is not our usual time! Past meetups have been at 7pm (U.S. Central). This one is happening at 1pm (U.S. Central). This meetup should be easier for people in Europe to attend.\n\n---\n\nPlease join us at the next OCaml Cafe, a friendly, low stakes opportunity to ask questions about the OCaml language and ecosystem, work through programming problems that you\u2019re stuck on, and get feedback on your code. Especially geared toward new and intermediate users, experienced OCaml developers will be available to answer your questions. Bring your code and we\u2019ll be happy to review it, assist with debugging, and provide recommendations for improvement.\n\nThis month, David Allsop of OCaml Labs and the University of Cambridge will present on OPAM, the OCaml package manager. After introducing OPAM, David will discuss the new features of OPAM 2.1, just released at the beginning of August. Following David\u2019s talk, we will open the discussion to all things OCaml-related.\n\nFull meeting details, including Zoom link, here:\n\nhttps://www.meetup.com/ocaml-cafe/events/281344155/",
          "author_fullname": "t2_4k52d",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "OCaml Caf\u00e9: Wed, Oct 13 @ 1pm (U.S. Central)",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_q5x60p",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 20,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 20,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1633962815.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Note!&lt;/strong&gt; This is not our usual time! Past meetups have been at 7pm (U.S. Central). This one is happening at 1pm (U.S. Central). This meetup should be easier for people in Europe to attend.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;Please join us at the next OCaml Cafe, a friendly, low stakes opportunity to ask questions about the OCaml language and ecosystem, work through programming problems that you\u2019re stuck on, and get feedback on your code. Especially geared toward new and intermediate users, experienced OCaml developers will be available to answer your questions. Bring your code and we\u2019ll be happy to review it, assist with debugging, and provide recommendations for improvement.&lt;/p&gt;\n\n&lt;p&gt;This month, David Allsop of OCaml Labs and the University of Cambridge will present on OPAM, the OCaml package manager. After introducing OPAM, David will discuss the new features of OPAM 2.1, just released at the beginning of August. Following David\u2019s talk, we will open the discussion to all things OCaml-related.&lt;/p&gt;\n\n&lt;p&gt;Full meeting details, including Zoom link, here:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.meetup.com/ocaml-cafe/events/281344155/\"&gt;https://www.meetup.com/ocaml-cafe/events/281344155/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "q5x60p",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "mbacarella",
          "discussion_type": null,
          "num_comments": 2,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/q5x60p/ocaml_caf\u00e9_wed_oct_13_1pm_us_central/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/q5x60p/ocaml_caf\u00e9_wed_oct_13_1pm_us_central/",
          "subreddit_subscribers": 8774,
          "created_utc": 1633962815.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "Hey-O \ud83d\udc2as,\n\nIs there a recommended formatter / pretty-printer for `Core` collections like `Core.List` and `Core.Map`? I can't find any format functions inside those modules, but it seems like they must exist.\n\nI'm not trying to do anything fancy - just print a list / set / map etc. I can write my own traversal functions, but this seems like a problem that's probably already solved.\n\nThanks!",
          "author_fullname": "t2_9xlyptvn",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Recommended method for pretty-printing collections in Core?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_q4q6wb",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 15,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 15,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1633801522.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey-O \ud83d\udc2as,&lt;/p&gt;\n\n&lt;p&gt;Is there a recommended formatter / pretty-printer for &lt;code&gt;Core&lt;/code&gt; collections like &lt;code&gt;Core.List&lt;/code&gt; and &lt;code&gt;Core.Map&lt;/code&gt;? I can&amp;#39;t find any format functions inside those modules, but it seems like they must exist.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m not trying to do anything fancy - just print a list / set / map etc. I can write my own traversal functions, but this seems like a problem that&amp;#39;s probably already solved.&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "q4q6wb",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "buywall",
          "discussion_type": null,
          "num_comments": 3,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/q4q6wb/recommended_method_for_prettyprinting_collections/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/q4q6wb/recommended_method_for_prettyprinting_collections/",
          "subreddit_subscribers": 8774,
          "created_utc": 1633801522.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "I'm using phantom types to track whether the elements of a sorted list are unique. The signature of the module is as follows:\n\n    type nonuniq\n    type uniq\n\n    type elt\n    type _ t = private elt list\n\n    val of_list: elt list -&gt; nonuniq t\n    val inter: ? t -&gt; ? t -&gt; ? t\n    val uniq: _ t -&gt; uniq t\n    ...\n\nThe problem is how to specify the signature of the intersection. val inter: 'state t -&gt; 'state t -&gt; 'state t is not good enough because an intersection between a list with unique and a list with non-unique elements makes sense and results in a list with unique elements. Basically the return type would need to be a result of a boolean OR function:\n\n    uniq -&gt; uniq -&gt; uniq\n    uniq -&gt; nonuniq -&gt; uniq\n    nonuniq -&gt; uniq -&gt; uniq\n    nonuniq -&gt; nonuniq -&gt; nonuniq\n\nAn obvious solution is to split the signature into two based on the first argument, however it is not the most elegant:\n\n    val inter: uniq t -&gt; _ t -&gt; uniq t\n    val inter': nonuniq t -&gt; 'state t -&gt; 'state t\n\nI found a potentially better solution that almost works (based on [link](https://stackoverflow.com/questions/41214000/can-one-encode-binary-functions-between-types-in-ocaml)):\n    \n     type nonuniq = [`NonUniq]\n     type uniq = [nonuniq | `Uniq]\n    \n     type elt\n     type _ t\n     \n     val of_list: elt list -&gt; [&gt; nonuniq] t\n     val inter: 'state t -&gt; 'state t -&gt; 'state t\n     val uniq: _ t -&gt; uniq t\n     ...\n     \n     val is_uniq: uniq t -&gt; unit (* for testing *)\n     val is_nonuniq: nonuniq t -&gt; unit\n\nThe problem is however that [&gt; nonuniq] t unifies with uniq t, so is_uniq always type checks (is_nonuniq works as expected, though). Is there a way to write a function that only accepts uniq t (and not [&gt; nonuniq] t)?",
          "author_fullname": "t2_hcj69",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Type level OR",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_q45cid",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.89,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 12,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 12,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": 1633723513.0,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1633722598.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m using phantom types to track whether the elements of a sorted list are unique. The signature of the module is as follows:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type nonuniq\ntype uniq\n\ntype elt\ntype _ t = private elt list\n\nval of_list: elt list -&amp;gt; nonuniq t\nval inter: ? t -&amp;gt; ? t -&amp;gt; ? t\nval uniq: _ t -&amp;gt; uniq t\n...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The problem is how to specify the signature of the intersection. val inter: &amp;#39;state t -&amp;gt; &amp;#39;state t -&amp;gt; &amp;#39;state t is not good enough because an intersection between a list with unique and a list with non-unique elements makes sense and results in a list with unique elements. Basically the return type would need to be a result of a boolean OR function:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;uniq -&amp;gt; uniq -&amp;gt; uniq\nuniq -&amp;gt; nonuniq -&amp;gt; uniq\nnonuniq -&amp;gt; uniq -&amp;gt; uniq\nnonuniq -&amp;gt; nonuniq -&amp;gt; nonuniq\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;An obvious solution is to split the signature into two based on the first argument, however it is not the most elegant:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;val inter: uniq t -&amp;gt; _ t -&amp;gt; uniq t\nval inter&amp;#39;: nonuniq t -&amp;gt; &amp;#39;state t -&amp;gt; &amp;#39;state t\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I found a potentially better solution that almost works (based on &lt;a href=\"https://stackoverflow.com/questions/41214000/can-one-encode-binary-functions-between-types-in-ocaml\"&gt;link&lt;/a&gt;):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; type nonuniq = [`NonUniq]\n type uniq = [nonuniq | `Uniq]\n\n type elt\n type _ t\n\n val of_list: elt list -&amp;gt; [&amp;gt; nonuniq] t\n val inter: &amp;#39;state t -&amp;gt; &amp;#39;state t -&amp;gt; &amp;#39;state t\n val uniq: _ t -&amp;gt; uniq t\n ...\n\n val is_uniq: uniq t -&amp;gt; unit (* for testing *)\n val is_nonuniq: nonuniq t -&amp;gt; unit\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The problem is however that [&amp;gt; nonuniq] t unifies with uniq t, so is_uniq always type checks (is_nonuniq works as expected, though). Is there a way to write a function that only accepts uniq t (and not [&amp;gt; nonuniq] t)?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "q45cid",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "wfdctrl",
          "discussion_type": null,
          "num_comments": 4,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/q45cid/type_level_or/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/q45cid/type_level_or/",
          "subreddit_subscribers": 8774,
          "created_utc": 1633722598.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "With the convergence between the multicore and standard runtime across OCaml 4.10.0 to 4.13.0, the development of OCaml multicore has reached a point where further integration into OCaml's main branch requires fully committing to a switch to OCaml multicore.\n\nThe OCaml team has decided that the time has come for such a commitment.  The new major version, OCaml 5, will be a multicore version of OCaml.  Moreover, OCaml 4.14 will be the last minor release of the 4.x series of OCaml.\n\n## Multicore Minimum Viable Product\n\nThe first version of OCaml multicore, code-named OCaml 5.0, will be a Minimum Viable Product focused on:\n\n* x86-64\n* Linux, MacOS, Windows mingw-w64\n* Parallelism through Domains \\[[1](https://arxiv.org/abs/2004.11663)\\]\n* Concurrency through Effect Handlers \\[[2](https://arxiv.org/abs/2104.00250)\\] (without syntactic support and exposed as functions from the standard library)\n\nOur plan is to integrate the multicore branch into the main branch during the next 6 months. Hopefully, OCaml 5.0 will then be released between March and April 2022.\n\nNote that OCaml 5.0 focuses on minimal (solid) support for the multicore runtime system, and will not provide stable user-facing concurrency and parallelism libraries. There has been a lot of experimentation \\[[3](https://github.com/ocaml-multicore),[4](https://github.com/ocaml-multicore/eio)\\] in the last few years, and some work remains to offer long-term, user-facing concurrent and parallel programming abstractions. OCaml 5.0 will be a great time to start adding concurrency and parallelism to your OCaml programs, but the libraries will still be in flux.\n\n## Long term support for OCaml 4.14\n\nWhile OCaml 5 is stabilising, we plan to extend the support period for OCaml 4.14 by publishing minor bugfix releases whenever needed. In particular, OCaml 4.14 will be supported until all tier-1 architectures and operating systems are available in OCaml 5, and OCaml 5 sequential performance is close enough to that of OCaml 4.\n\n## The sequential glaciation\n\nTo ensure that maintainers can concentrate on Multicore integration, and avoid any rebase work for the Multicore developers, the trunk branch will be feature-frozen starting from November 2021. All non-bugfix non-multicore contributions will be delayed to after the Multicore integration. We are calling this period the \"sequential glaciation\".\n\nWe understand that this may be frustrating for our contributors, and apologize for the delay in getting your nice work reviewed and merged into the codebase. We hope that the sequential glaciation will be a good opportunity to help with the Multicore integration, review and testing, and/or focus on non-core-compiler efforts and the rest of the OCaml ecosystem.\n\nWith this early feature-freeze, we also plan to release OCaml 4.14.0 in advance, between January and February 2022, reducing the concurrency between the OCaml 5.0 and OCaml 4.14.0 releases.\n\n## References\n\n\\[[1](https://arxiv.org/abs/2004.11663)\\] \"Retrofitting Parallelism onto OCaml\", ICFP 2020, [https://arxiv.org/abs/2004.11663](https://arxiv.org/abs/2004.11663) \n\n\\[[2](https://arxiv.org/abs/2104.00250)\\] \"Retrofitting Concurrency onto OCaml\", PLDI 2021, [https://arxiv.org/abs/2104.00250](https://arxiv.org/abs/2104.00250) \n\n\\[[3](https://github.com/ocaml-multicore)\\] Domainslib -- Parallel Programming over Multicore OCaml, [https://github.com/ocaml-multicore/domainslib](https://github.com/ocaml-multicore/domainslib) \n\n\\[[4](https://github.com/ocaml-multicore/eio)\\] eio -- Effects-based Parallel IO for OCaml, [https://github.com/ocaml-multicore/eio](https://github.com/ocaml-multicore/eio)",
          "author_fullname": "t2_i49at",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "The road to OCaml 5.0",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_q35m90",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 90,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 90,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1633600311.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;With the convergence between the multicore and standard runtime across OCaml 4.10.0 to 4.13.0, the development of OCaml multicore has reached a point where further integration into OCaml&amp;#39;s main branch requires fully committing to a switch to OCaml multicore.&lt;/p&gt;\n\n&lt;p&gt;The OCaml team has decided that the time has come for such a commitment.  The new major version, OCaml 5, will be a multicore version of OCaml.  Moreover, OCaml 4.14 will be the last minor release of the 4.x series of OCaml.&lt;/p&gt;\n\n&lt;h2&gt;Multicore Minimum Viable Product&lt;/h2&gt;\n\n&lt;p&gt;The first version of OCaml multicore, code-named OCaml 5.0, will be a Minimum Viable Product focused on:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;x86-64&lt;/li&gt;\n&lt;li&gt;Linux, MacOS, Windows mingw-w64&lt;/li&gt;\n&lt;li&gt;Parallelism through Domains [&lt;a href=\"https://arxiv.org/abs/2004.11663\"&gt;1&lt;/a&gt;]&lt;/li&gt;\n&lt;li&gt;Concurrency through Effect Handlers [&lt;a href=\"https://arxiv.org/abs/2104.00250\"&gt;2&lt;/a&gt;] (without syntactic support and exposed as functions from the standard library)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Our plan is to integrate the multicore branch into the main branch during the next 6 months. Hopefully, OCaml 5.0 will then be released between March and April 2022.&lt;/p&gt;\n\n&lt;p&gt;Note that OCaml 5.0 focuses on minimal (solid) support for the multicore runtime system, and will not provide stable user-facing concurrency and parallelism libraries. There has been a lot of experimentation [&lt;a href=\"https://github.com/ocaml-multicore\"&gt;3&lt;/a&gt;,&lt;a href=\"https://github.com/ocaml-multicore/eio\"&gt;4&lt;/a&gt;] in the last few years, and some work remains to offer long-term, user-facing concurrent and parallel programming abstractions. OCaml 5.0 will be a great time to start adding concurrency and parallelism to your OCaml programs, but the libraries will still be in flux.&lt;/p&gt;\n\n&lt;h2&gt;Long term support for OCaml 4.14&lt;/h2&gt;\n\n&lt;p&gt;While OCaml 5 is stabilising, we plan to extend the support period for OCaml 4.14 by publishing minor bugfix releases whenever needed. In particular, OCaml 4.14 will be supported until all tier-1 architectures and operating systems are available in OCaml 5, and OCaml 5 sequential performance is close enough to that of OCaml 4.&lt;/p&gt;\n\n&lt;h2&gt;The sequential glaciation&lt;/h2&gt;\n\n&lt;p&gt;To ensure that maintainers can concentrate on Multicore integration, and avoid any rebase work for the Multicore developers, the trunk branch will be feature-frozen starting from November 2021. All non-bugfix non-multicore contributions will be delayed to after the Multicore integration. We are calling this period the &amp;quot;sequential glaciation&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;We understand that this may be frustrating for our contributors, and apologize for the delay in getting your nice work reviewed and merged into the codebase. We hope that the sequential glaciation will be a good opportunity to help with the Multicore integration, review and testing, and/or focus on non-core-compiler efforts and the rest of the OCaml ecosystem.&lt;/p&gt;\n\n&lt;p&gt;With this early feature-freeze, we also plan to release OCaml 4.14.0 in advance, between January and February 2022, reducing the concurrency between the OCaml 5.0 and OCaml 4.14.0 releases.&lt;/p&gt;\n\n&lt;h2&gt;References&lt;/h2&gt;\n\n&lt;p&gt;[&lt;a href=\"https://arxiv.org/abs/2004.11663\"&gt;1&lt;/a&gt;] &amp;quot;Retrofitting Parallelism onto OCaml&amp;quot;, ICFP 2020, &lt;a href=\"https://arxiv.org/abs/2004.11663\"&gt;https://arxiv.org/abs/2004.11663&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;[&lt;a href=\"https://arxiv.org/abs/2104.00250\"&gt;2&lt;/a&gt;] &amp;quot;Retrofitting Concurrency onto OCaml&amp;quot;, PLDI 2021, &lt;a href=\"https://arxiv.org/abs/2104.00250\"&gt;https://arxiv.org/abs/2104.00250&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;[&lt;a href=\"https://github.com/ocaml-multicore\"&gt;3&lt;/a&gt;] Domainslib -- Parallel Programming over Multicore OCaml, &lt;a href=\"https://github.com/ocaml-multicore/domainslib\"&gt;https://github.com/ocaml-multicore/domainslib&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;[&lt;a href=\"https://github.com/ocaml-multicore/eio\"&gt;4&lt;/a&gt;] eio -- Effects-based Parallel IO for OCaml, &lt;a href=\"https://github.com/ocaml-multicore/eio\"&gt;https://github.com/ocaml-multicore/eio&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "q35m90",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "octachron",
          "discussion_type": null,
          "num_comments": 3,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/q35m90/the_road_to_ocaml_50/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/q35m90/the_road_to_ocaml_50/",
          "subreddit_subscribers": 8774,
          "created_utc": 1633600311.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "Hi there! I've recently been learning OCaml from the [Cornell OCaml textbook](https://www.cs.cornell.edu/courses/cs3110/2019sp/textbook/intro/ocaml.html), and been using it to build a simple compiler from nand2tetris (if you've heard of it).\n\nNow that I'm familiar enough with the OCaml syntax to get most things done, I'm a bit concerned that I'm basically just \"writing python in ocaml,\" instead of really taking advantage of its features. I do use map/filter/reduce and some pattern matching, but I haven't yet really done anything clever with types yet.\n\nI guess I was just wondering if anyone had suggestions for particular features to use to try and get into more of a functional mindset.\n\nThanks.",
          "author_fullname": "t2_5d014",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "How to avoid writing python in Ocaml",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_q3cn28",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 21,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 21,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1633623609.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi there! I&amp;#39;ve recently been learning OCaml from the &lt;a href=\"https://www.cs.cornell.edu/courses/cs3110/2019sp/textbook/intro/ocaml.html\"&gt;Cornell OCaml textbook&lt;/a&gt;, and been using it to build a simple compiler from nand2tetris (if you&amp;#39;ve heard of it).&lt;/p&gt;\n\n&lt;p&gt;Now that I&amp;#39;m familiar enough with the OCaml syntax to get most things done, I&amp;#39;m a bit concerned that I&amp;#39;m basically just &amp;quot;writing python in ocaml,&amp;quot; instead of really taking advantage of its features. I do use map/filter/reduce and some pattern matching, but I haven&amp;#39;t yet really done anything clever with types yet.&lt;/p&gt;\n\n&lt;p&gt;I guess I was just wondering if anyone had suggestions for particular features to use to try and get into more of a functional mindset.&lt;/p&gt;\n\n&lt;p&gt;Thanks.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "q3cn28",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "TissueReligion",
          "discussion_type": null,
          "num_comments": 6,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/q3cn28/how_to_avoid_writing_python_in_ocaml/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/q3cn28/how_to_avoid_writing_python_in_ocaml/",
          "subreddit_subscribers": 8774,
          "created_utc": 1633623609.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "Hi everyone! I'm trying to work with the Graphics library, but it's giving me an error that says Exception: Graphics.Graphic\\_failure \"Cannot open display\". I've downloaded and am running XMing. I've tried editing some stuff on PuTTY and editing the DISPLAY variable, but nothing has worked at all. For reference, I'm working on OCaml 4.12 in Ubuntu on Windows with Dune. Thanks!",
          "author_fullname": "t2_9axmug6g",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Graphics",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_q3j34i",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 2,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 2,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1633641934.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi everyone! I&amp;#39;m trying to work with the Graphics library, but it&amp;#39;s giving me an error that says Exception: Graphics.Graphic_failure &amp;quot;Cannot open display&amp;quot;. I&amp;#39;ve downloaded and am running XMing. I&amp;#39;ve tried editing some stuff on PuTTY and editing the DISPLAY variable, but nothing has worked at all. For reference, I&amp;#39;m working on OCaml 4.12 in Ubuntu on Windows with Dune. Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "q3j34i",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "noteasternwinds",
          "discussion_type": null,
          "num_comments": 1,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/q3j34i/graphics/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/q3j34i/graphics/",
          "subreddit_subscribers": 8774,
          "created_utc": 1633641934.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "Trying Ocaml, but can't install the basic environment, could anyone point out how to workaround?\n```\n~/sources/ocaml-pg&gt; opam install merlin\nThe following actions will be performed:\n  - install ocamlfind         1.9.1     [required by dot-merlin-reader]\n  - install dune              2.9.1     [required by merlin]\n  - install result            1.5       [required by merlin]\n  - install easy-format       1.3.2     [required by yojson]\n  - install csexp             1.5.1     [required by merlin]\n  - install cppo              1.6.8     [required by yojson]\n  - install biniou            1.2.1     [required by yojson]\n  - install yojson            1.7.0     [required by merlin]\n  - install dot-merlin-reader 4.1       [required by merlin]\n  - install merlin            4.3.1-412\n===== 10 to install =====\nDo you want to continue? [Y/n] y\n\n&lt;&gt;&lt;&gt; Processing actions &lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;\n-&gt; retrieved csexp.1.5.1  (https://opam.ocaml.org/cache)\n-&gt; retrieved biniou.1.2.1  (https://opam.ocaml.org/cache)\n-&gt; retrieved cppo.1.6.8  (https://opam.ocaml.org/cache)\n-&gt; retrieved easy-format.1.3.2  (https://opam.ocaml.org/cache)\n-&gt; retrieved dune.2.9.1  (https://opam.ocaml.org/cache)\n-&gt; retrieved dot-merlin-reader.4.1  (https://opam.ocaml.org/cache)\n-&gt; retrieved result.1.5  (https://opam.ocaml.org/cache)\n-&gt; retrieved merlin.4.3.1-412  (https://opam.ocaml.org/cache)\n-&gt; retrieved ocamlfind.1.9.1  (https://opam.ocaml.org/cache)\n-&gt; retrieved yojson.1.7.0  (https://opam.ocaml.org/cache)\n[ERROR] The compilation of ocamlfind.1.9.1 failed at \"make all\".\n-&gt; installed dune.2.9.1\n-&gt; installed csexp.1.5.1\n-&gt; installed easy-format.1.3.2\n-&gt; installed result.1.5\n-&gt; installed cppo.1.6.8\n-&gt; installed biniou.1.2.1\n-&gt; installed yojson.1.7.0\n\n#=== ERROR while compiling ocamlfind.1.9.1 ====================================#\n# context     2.1.0 | linux/x86_64 | ocaml.4.12.1 | https://opam.ocaml.org#4c81f7e8\n# path        ~/.opam/default/.opam-switch/build/ocamlfind.1.9.1\n# command     ~/.opam/opam-init/hooks/sandbox.sh build make all\n# exit-code   2\n# env-file    ~/.opam/log/ocamlfind-20779-92dc36.env\n# output-file ~/.opam/log/ocamlfind-20779-92dc36.out\n### output ###\n# [...]\n# Use Bytes.create/BytesLabels.create instead.\n# ocamlc -I +compiler-libs  -o ocamlfind -g findlib.cma unix.cma \\\n#            ocaml_args.cmo frontend.cmo\n# ocamlc -I +compiler-libs -opaque -c topfind.mli\n# ocamlc -I +compiler-libs -opaque -g -c topfind.ml\n# File \"topfind.ml\", line 47, characters 4-25:\n# 47 |     Topdirs.dir_directory d;\n#          ^^^^^^^^^^^^^^^^^^^^^\n# Error: Unbound module Topdirs\n# make[1]: *** [Makefile:165: topfind.cmo] Error 2\n# make[1]: Leaving directory '/home/denis/.opam/default/.opam-switch/build/ocamlfind.1.9.1/src/findlib'\n# make: *** [Makefile:14: all] Error 2\n\n\n\n&lt;&gt;&lt;&gt; Error report &lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;\n+- The following actions failed\n| - build ocamlfind 1.9.1\n+- \n+- The following changes have been performed (the rest was aborted)\n| - install biniou      1.2.1\n| - install cppo        1.6.8\n| - install csexp       1.5.1\n| - install dune        2.9.1\n| - install easy-format 1.3.2\n| - install result      1.5\n| - install yojson      1.7.0\n+-\n```\nSystem: openSUSE Tumbleweed, Ocaml 4.12.1, Opam 2.1.0",
          "author_fullname": "t2_8zxyg8fj",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Help, can't install merlin (ocamlfind fails)",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_q39kgx",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 3,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 3,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1633614761.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Trying Ocaml, but can&amp;#39;t install the basic environment, could anyone point out how to workaround?\n```\n~/sources/ocaml-pg&amp;gt; opam install merlin\nThe following actions will be performed:\n  - install ocamlfind         1.9.1     [required by dot-merlin-reader]\n  - install dune              2.9.1     [required by merlin]\n  - install result            1.5       [required by merlin]\n  - install easy-format       1.3.2     [required by yojson]\n  - install csexp             1.5.1     [required by merlin]\n  - install cppo              1.6.8     [required by yojson]\n  - install biniou            1.2.1     [required by yojson]\n  - install yojson            1.7.0     [required by merlin]\n  - install dot-merlin-reader 4.1       [required by merlin]\n  - install merlin            4.3.1-412\n===== 10 to install =====\nDo you want to continue? [Y/n] y&lt;/p&gt;\n\n&lt;p&gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt; Processing actions &amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;\n-&amp;gt; retrieved csexp.1.5.1  (&lt;a href=\"https://opam.ocaml.org/cache\"&gt;https://opam.ocaml.org/cache&lt;/a&gt;)\n-&amp;gt; retrieved biniou.1.2.1  (&lt;a href=\"https://opam.ocaml.org/cache\"&gt;https://opam.ocaml.org/cache&lt;/a&gt;)\n-&amp;gt; retrieved cppo.1.6.8  (&lt;a href=\"https://opam.ocaml.org/cache\"&gt;https://opam.ocaml.org/cache&lt;/a&gt;)\n-&amp;gt; retrieved easy-format.1.3.2  (&lt;a href=\"https://opam.ocaml.org/cache\"&gt;https://opam.ocaml.org/cache&lt;/a&gt;)\n-&amp;gt; retrieved dune.2.9.1  (&lt;a href=\"https://opam.ocaml.org/cache\"&gt;https://opam.ocaml.org/cache&lt;/a&gt;)\n-&amp;gt; retrieved dot-merlin-reader.4.1  (&lt;a href=\"https://opam.ocaml.org/cache\"&gt;https://opam.ocaml.org/cache&lt;/a&gt;)\n-&amp;gt; retrieved result.1.5  (&lt;a href=\"https://opam.ocaml.org/cache\"&gt;https://opam.ocaml.org/cache&lt;/a&gt;)\n-&amp;gt; retrieved merlin.4.3.1-412  (&lt;a href=\"https://opam.ocaml.org/cache\"&gt;https://opam.ocaml.org/cache&lt;/a&gt;)\n-&amp;gt; retrieved ocamlfind.1.9.1  (&lt;a href=\"https://opam.ocaml.org/cache\"&gt;https://opam.ocaml.org/cache&lt;/a&gt;)\n-&amp;gt; retrieved yojson.1.7.0  (&lt;a href=\"https://opam.ocaml.org/cache\"&gt;https://opam.ocaml.org/cache&lt;/a&gt;)\n[ERROR] The compilation of ocamlfind.1.9.1 failed at &amp;quot;make all&amp;quot;.\n-&amp;gt; installed dune.2.9.1\n-&amp;gt; installed csexp.1.5.1\n-&amp;gt; installed easy-format.1.3.2\n-&amp;gt; installed result.1.5\n-&amp;gt; installed cppo.1.6.8\n-&amp;gt; installed biniou.1.2.1\n-&amp;gt; installed yojson.1.7.0&lt;/p&gt;\n\n&lt;h1&gt;=== ERROR while compiling ocamlfind.1.9.1 ====================================&lt;/h1&gt;\n\n&lt;h1&gt;context     2.1.0 | linux/x86_64 | ocaml.4.12.1 | &lt;a href=\"https://opam.ocaml.org#4c81f7e8\"&gt;https://opam.ocaml.org#4c81f7e8&lt;/a&gt;&lt;/h1&gt;\n\n&lt;h1&gt;path        ~/.opam/default/.opam-switch/build/ocamlfind.1.9.1&lt;/h1&gt;\n\n&lt;h1&gt;command     ~/.opam/opam-init/hooks/sandbox.sh build make all&lt;/h1&gt;\n\n&lt;h1&gt;exit-code   2&lt;/h1&gt;\n\n&lt;h1&gt;env-file    ~/.opam/log/ocamlfind-20779-92dc36.env&lt;/h1&gt;\n\n&lt;h1&gt;output-file ~/.opam/log/ocamlfind-20779-92dc36.out&lt;/h1&gt;\n\n&lt;h3&gt;output&lt;/h3&gt;\n\n&lt;h1&gt;[...]&lt;/h1&gt;\n\n&lt;h1&gt;Use Bytes.create/BytesLabels.create instead.&lt;/h1&gt;\n\n&lt;h1&gt;ocamlc -I +compiler-libs  -o ocamlfind -g findlib.cma unix.cma \\&lt;/h1&gt;\n\n&lt;h1&gt;ocaml_args.cmo frontend.cmo&lt;/h1&gt;\n\n&lt;h1&gt;ocamlc -I +compiler-libs -opaque -c topfind.mli&lt;/h1&gt;\n\n&lt;h1&gt;ocamlc -I +compiler-libs -opaque -g -c topfind.ml&lt;/h1&gt;\n\n&lt;h1&gt;File &amp;quot;topfind.ml&amp;quot;, line 47, characters 4-25:&lt;/h1&gt;\n\n&lt;h1&gt;47 |     Topdirs.dir_directory d;&lt;/h1&gt;\n\n&lt;h1&gt;&lt;/h1&gt;\n\n&lt;h1&gt;Error: Unbound module Topdirs&lt;/h1&gt;\n\n&lt;h1&gt;make[1]: *** [Makefile:165: topfind.cmo] Error 2&lt;/h1&gt;\n\n&lt;h1&gt;make[1]: Leaving directory &amp;#39;/home/denis/.opam/default/.opam-switch/build/ocamlfind.1.9.1/src/findlib&amp;#39;&lt;/h1&gt;\n\n&lt;h1&gt;make: *** [Makefile:14: all] Error 2&lt;/h1&gt;\n\n&lt;p&gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt; Error report &amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;\n+- The following actions failed\n| - build ocamlfind 1.9.1\n+- \n+- The following changes have been performed (the rest was aborted)\n| - install biniou      1.2.1\n| - install cppo        1.6.8\n| - install csexp       1.5.1\n| - install dune        2.9.1\n| - install easy-format 1.3.2\n| - install result      1.5\n| - install yojson      1.7.0\n+-\n```\nSystem: openSUSE Tumbleweed, Ocaml 4.12.1, Opam 2.1.0&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "q39kgx",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "Murky_Schedule_2570",
          "discussion_type": null,
          "num_comments": 1,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/q39kgx/help_cant_install_merlin_ocamlfind_fails/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/q39kgx/help_cant_install_merlin_ocamlfind_fails/",
          "subreddit_subscribers": 8774,
          "created_utc": 1633614761.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "",
          "author_fullname": "t2_1o6s",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Signals &amp; Threads S02E02: Building a UI Framework",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_q2ruay",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 26,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 26,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1633549242.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "signalsandthreads.com",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "url_overridden_by_dest": "https://signalsandthreads.com/building-a-ui-framework/",
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "q2ruay",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "apoisel",
          "discussion_type": null,
          "num_comments": 0,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/q2ruay/signals_threads_s02e02_building_a_ui_framework/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://signalsandthreads.com/building-a-ui-framework/",
          "subreddit_subscribers": 8774,
          "created_utc": 1633549242.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "There has been \\`odoc\\` 2.0.0 release in the \\`OCaml\\` and \\`Reason\\` community that comes with much more improvements and bug fixes. This in turn enables and guides package authors on how to write better documentation for the packages, and paves way for those looking to contribute to \\`odoc\\` through improved [\\`odoc\\` documentation](https://ocaml.github.io/odoc/). Please check it out --\n\n[https://discuss.ocaml.org/t/ann-release-of-odoc-2-0-0/8582](https://discuss.ocaml.org/t/ann-release-of-odoc-2-0-0/8582)",
          "author_fullname": "t2_4pcs2sd4",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Odoc 2.0.0 released.",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_q2qxls",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 14,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 14,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1633546540.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;There has been `odoc` 2.0.0 release in the `OCaml` and `Reason` community that comes with much more improvements and bug fixes. This in turn enables and guides package authors on how to write better documentation for the packages, and paves way for those looking to contribute to `odoc` through improved &lt;a href=\"https://ocaml.github.io/odoc/\"&gt;`odoc` documentation&lt;/a&gt;. Please check it out --&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://discuss.ocaml.org/t/ann-release-of-odoc-2-0-0/8582\"&gt;https://discuss.ocaml.org/t/ann-release-of-odoc-2-0-0/8582&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "q2qxls",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "lubegasimon_",
          "discussion_type": null,
          "num_comments": 0,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/q2qxls/odoc_200_released/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/q2qxls/odoc_200_released/",
          "subreddit_subscribers": 8774,
          "created_utc": 1633546540.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "",
          "author_fullname": "t2_9ojru",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "The OCaml Weekly News for 2021-10-05 are out",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_q1tdqx",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.94,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 13,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 13,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1633428785.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "alan.petitepomme.net",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "url_overridden_by_dest": "https://alan.petitepomme.net/cwn/2021.10.05.html",
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "q1tdqx",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "brabarb",
          "discussion_type": null,
          "num_comments": 0,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/q1tdqx/the_ocaml_weekly_news_for_20211005_are_out/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://alan.petitepomme.net/cwn/2021.10.05.html",
          "subreddit_subscribers": 8774,
          "created_utc": 1633428785.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "Hey-O \ud83d\udc2as,\n\nIs there a best practice for hiding the types in `Core.Map.t`?\n\nFor example, a module wrapping a map that has string keys and values has a type like this:\n\n    module MyMapWrapper = struct\n      type cmp = Core.Comparator.Make(Core.String).comparator_witness\n      type t = (string, string, cmp) Core.Map.t\n    end\n\nEven if I special-case the map to make it strings-only, there's still a lingering `comparator_witness` type parameter:\n\n    module MyMapWrapper = struct\n      type cmp = Core.Comparator.Make(Core.String).comparator_witness\n      module StringMap = Core.Map.Make (Core.String)\n      type t = cmp StringMap.t\n    end\n\nI'm pretty sure I could work out a solution by creating a new module that includes from `Core.Map.t`, but I'm sure that's not idiomatic.\n\nI guess at a high level, I don't understand why the `comparator_witness` type has to appear in the type signature. Naively, I would have expected the comparator to be stored as a value inside the map.\n\nI'm clearly missing something fundamental, and any help would be appreciated.\n\nThanks!",
          "author_fullname": "t2_9xlyptvn",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Hiding the type parameters of Core.Map.t?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_q1clng",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.88,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 6,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 6,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1633374730.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey-O \ud83d\udc2as,&lt;/p&gt;\n\n&lt;p&gt;Is there a best practice for hiding the types in &lt;code&gt;Core.Map.t&lt;/code&gt;?&lt;/p&gt;\n\n&lt;p&gt;For example, a module wrapping a map that has string keys and values has a type like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module MyMapWrapper = struct\n  type cmp = Core.Comparator.Make(Core.String).comparator_witness\n  type t = (string, string, cmp) Core.Map.t\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Even if I special-case the map to make it strings-only, there&amp;#39;s still a lingering &lt;code&gt;comparator_witness&lt;/code&gt; type parameter:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module MyMapWrapper = struct\n  type cmp = Core.Comparator.Make(Core.String).comparator_witness\n  module StringMap = Core.Map.Make (Core.String)\n  type t = cmp StringMap.t\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;m pretty sure I could work out a solution by creating a new module that includes from &lt;code&gt;Core.Map.t&lt;/code&gt;, but I&amp;#39;m sure that&amp;#39;s not idiomatic.&lt;/p&gt;\n\n&lt;p&gt;I guess at a high level, I don&amp;#39;t understand why the &lt;code&gt;comparator_witness&lt;/code&gt; type has to appear in the type signature. Naively, I would have expected the comparator to be stored as a value inside the map.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m clearly missing something fundamental, and any help would be appreciated.&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "q1clng",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "buywall",
          "discussion_type": null,
          "num_comments": 6,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/q1clng/hiding_the_type_parameters_of_coremapt/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/q1clng/hiding_the_type_parameters_of_coremapt/",
          "subreddit_subscribers": 8774,
          "created_utc": 1633374730.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "I don't know how to compare the length of 2 strings and then return the shorter one. For example\n\nshorter \"wow\" \"ocaml\" ;;\n\nreturns the string \"wow\"",
          "author_fullname": "t2_scgo69x",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Return the shorter of 2 strings",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_q1cq0v",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.29,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 0,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 0,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1633375049.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t know how to compare the length of 2 strings and then return the shorter one. For example&lt;/p&gt;\n\n&lt;p&gt;shorter &amp;quot;wow&amp;quot; &amp;quot;ocaml&amp;quot; ;;&lt;/p&gt;\n\n&lt;p&gt;returns the string &amp;quot;wow&amp;quot;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "q1cq0v",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "Zyas36",
          "discussion_type": null,
          "num_comments": 4,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/q1cq0v/return_the_shorter_of_2_strings/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/q1cq0v/return_the_shorter_of_2_strings/",
          "subreddit_subscribers": 8774,
          "created_utc": 1633375049.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "",
          "author_fullname": "t2_3eomt1dn",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Multicore OCaml: September 2021, effect handlers will be in OCaml 5.0!",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_pz9kdi",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.98,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 50,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 50,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1633099720.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "discuss.ocaml.org",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "url_overridden_by_dest": "https://discuss.ocaml.org/t/multicore-ocaml-september-2021-effect-handlers-will-be-in-ocaml-5-0/8554",
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "pz9kdi",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "sadiq_ml",
          "discussion_type": null,
          "num_comments": 3,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/pz9kdi/multicore_ocaml_september_2021_effect_handlers/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://discuss.ocaml.org/t/multicore-ocaml-september-2021-effect-handlers-will-be-in-ocaml-5-0/8554",
          "subreddit_subscribers": 8774,
          "created_utc": 1633099720.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "I'm playing around with the algebraic effects compiler extension and the tutorial [here](https://github.com/ocamllabs/ocaml-effects-tutorial#1-algebraic-effects-and-handlers).\n\nI'm a bit confused by the following example which implements a Get operation.\n\n    module type STATE = sig\n      type t\n      val get : unit -&gt; t\n      val run : (unit -&gt; unit) -&gt; init:t -&gt; unit\n    end\n\n    module State (S : sig type t end) : STATE with type t = S.t = struct\n\n      type t = S.t\n\n      effect Get : t\n      let get () = perform Get\n\n      let run f ~init =\n        let comp =\n          match f () with\n          | () -&gt; (fun s -&gt; ())\n          | effect Get k -&gt; (fun (s : t) -&gt; continue k s s)\n        in comp init\n\n    end\n\nIn particular I don't get why it is correct to put `continue k s s` instead of just `continue k s`. I figured `k` should represent a \"hole\" in the program where the get effect has been performed like so:\n\n    let v = perform Get in e\n    ==&gt;\n    let v = _ (* hole *) in e\n\nso that `k` should have the type `(t, 'a) continuation` (for some 'a) and `continue k s` should cause the above to continue as follows:\n\n    let v = _ in e\n    ==&gt;\n    let v = s in e\n\nThat is my first point of confusion.\n\nWhile attempting to clear my misunderstanding I encountered another point of confusion. I changed the source of the program so that the get handler is as follows\n\n    | effect Get k -&gt; k\n\nThis causes a type error which tells me the type of `k`, which I hoped would clarify what's going on. However, the compiler tells me that `k : (effect, unit -&gt; 'a) continuation` - huh? What is `effect` here? The type of e.g. `effect E : unit` is not `effect` but `unit eff`.\n\nAny tips would be greatly appreciated!",
          "author_fullname": "t2_a2dbt",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Questions about algebraic effects/handlers",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_pzjir7",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 5,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 5,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": 1633134975.0,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1633130226.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m playing around with the algebraic effects compiler extension and the tutorial &lt;a href=\"https://github.com/ocamllabs/ocaml-effects-tutorial#1-algebraic-effects-and-handlers\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m a bit confused by the following example which implements a Get operation.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module type STATE = sig\n  type t\n  val get : unit -&amp;gt; t\n  val run : (unit -&amp;gt; unit) -&amp;gt; init:t -&amp;gt; unit\nend\n\nmodule State (S : sig type t end) : STATE with type t = S.t = struct\n\n  type t = S.t\n\n  effect Get : t\n  let get () = perform Get\n\n  let run f ~init =\n    let comp =\n      match f () with\n      | () -&amp;gt; (fun s -&amp;gt; ())\n      | effect Get k -&amp;gt; (fun (s : t) -&amp;gt; continue k s s)\n    in comp init\n\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In particular I don&amp;#39;t get why it is correct to put &lt;code&gt;continue k s s&lt;/code&gt; instead of just &lt;code&gt;continue k s&lt;/code&gt;. I figured &lt;code&gt;k&lt;/code&gt; should represent a &amp;quot;hole&amp;quot; in the program where the get effect has been performed like so:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let v = perform Get in e\n==&amp;gt;\nlet v = _ (* hole *) in e\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;so that &lt;code&gt;k&lt;/code&gt; should have the type &lt;code&gt;(t, &amp;#39;a) continuation&lt;/code&gt; (for some &amp;#39;a) and &lt;code&gt;continue k s&lt;/code&gt; should cause the above to continue as follows:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let v = _ in e\n==&amp;gt;\nlet v = s in e\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That is my first point of confusion.&lt;/p&gt;\n\n&lt;p&gt;While attempting to clear my misunderstanding I encountered another point of confusion. I changed the source of the program so that the get handler is as follows&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;| effect Get k -&amp;gt; k\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This causes a type error which tells me the type of &lt;code&gt;k&lt;/code&gt;, which I hoped would clarify what&amp;#39;s going on. However, the compiler tells me that &lt;code&gt;k : (effect, unit -&amp;gt; &amp;#39;a) continuation&lt;/code&gt; - huh? What is &lt;code&gt;effect&lt;/code&gt; here? The type of e.g. &lt;code&gt;effect E : unit&lt;/code&gt; is not &lt;code&gt;effect&lt;/code&gt; but &lt;code&gt;unit eff&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Any tips would be greatly appreciated!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "pzjir7",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "dalastboss",
          "discussion_type": null,
          "num_comments": 3,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/pzjir7/questions_about_algebraic_effectshandlers/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/pzjir7/questions_about_algebraic_effectshandlers/",
          "subreddit_subscribers": 8774,
          "created_utc": 1633130226.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "I can't tell if I'm just dumb or something, but I've been really trying to google and read the janestreet Ocaml Re2 library's documentation, but I feel like I still can't do basic things, and I can't find many ocaml Re2 examples online. (And I am familiar with regex's in general.)\n\nIs there some simple tutorial somewhere I'm missing...?\n\nWould be appreciated.\n\nThanks.",
          "author_fullname": "t2_5d014",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Where can I find examples for how to use the ocaml Re2 library?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_pxc4sv",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.88,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 6,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 6,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1632852388.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I can&amp;#39;t tell if I&amp;#39;m just dumb or something, but I&amp;#39;ve been really trying to google and read the janestreet Ocaml Re2 library&amp;#39;s documentation, but I feel like I still can&amp;#39;t do basic things, and I can&amp;#39;t find many ocaml Re2 examples online. (And I am familiar with regex&amp;#39;s in general.)&lt;/p&gt;\n\n&lt;p&gt;Is there some simple tutorial somewhere I&amp;#39;m missing...?&lt;/p&gt;\n\n&lt;p&gt;Would be appreciated.&lt;/p&gt;\n\n&lt;p&gt;Thanks.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "pxc4sv",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "TissueReligion",
          "discussion_type": null,
          "num_comments": 3,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/pxc4sv/where_can_i_find_examples_for_how_to_use_the/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/pxc4sv/where_can_i_find_examples_for_how_to_use_the/",
          "subreddit_subscribers": 8774,
          "created_utc": 1632852388.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "",
          "author_fullname": "t2_9ojru",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "The OCaml Weekly News for 2021-09-28 are out",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_px0hdw",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 12,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 12,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1632811234.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "alan.petitepomme.net",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "url_overridden_by_dest": "https://alan.petitepomme.net/cwn/2021.09.28.html",
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "px0hdw",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "brabarb",
          "discussion_type": null,
          "num_comments": 0,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/px0hdw/the_ocaml_weekly_news_for_20210928_are_out/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://alan.petitepomme.net/cwn/2021.09.28.html",
          "subreddit_subscribers": 8774,
          "created_utc": 1632811234.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "Hey-O \ud83d\udc2as!\n\nI'm creating a module, and for ergonomics (e.g. pattern matching), I'd like my module type to be concrete, but for safety I want to ensure instances of the type can only be constructed using constructors I provide.\n\nHow can I do this?\n\nAs an example, consider this module:\n\n    module NonnegativePair = struct\n      type t = {left : int; right : int}\n    \n      let make (left : int) (right : int) : t =\n        if left &lt; 0 || right &lt; 0 then\n          Stdlib.invalid_arg \"Arguments must be nonnegative\"\n        else {left; right}\n    end\n\nI'd like to ensure that the values in `NonnegativePair.t` are always nonnegative, and that's what the constructor `NonnegativePair.make` checks. However, as it's written anyone can create a `NonnegativePair.t` like this:\n\n    let bad_pair : NonnegativePair.t = {left = -1; right = -1}\n\nAny idea how I can keep my concrete type but still control how it gets constructed?\n\nThanks!",
          "author_fullname": "t2_9xlyptvn",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "How can I keep a module type concrete while controlling how the module type can be constructed?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_pwsj9f",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 13,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 13,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1632782629.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey-O \ud83d\udc2as!&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m creating a module, and for ergonomics (e.g. pattern matching), I&amp;#39;d like my module type to be concrete, but for safety I want to ensure instances of the type can only be constructed using constructors I provide.&lt;/p&gt;\n\n&lt;p&gt;How can I do this?&lt;/p&gt;\n\n&lt;p&gt;As an example, consider this module:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module NonnegativePair = struct\n  type t = {left : int; right : int}\n\n  let make (left : int) (right : int) : t =\n    if left &amp;lt; 0 || right &amp;lt; 0 then\n      Stdlib.invalid_arg &amp;quot;Arguments must be nonnegative&amp;quot;\n    else {left; right}\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;d like to ensure that the values in &lt;code&gt;NonnegativePair.t&lt;/code&gt; are always nonnegative, and that&amp;#39;s what the constructor &lt;code&gt;NonnegativePair.make&lt;/code&gt; checks. However, as it&amp;#39;s written anyone can create a &lt;code&gt;NonnegativePair.t&lt;/code&gt; like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let bad_pair : NonnegativePair.t = {left = -1; right = -1}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Any idea how I can keep my concrete type but still control how it gets constructed?&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "pwsj9f",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "buywall",
          "discussion_type": null,
          "num_comments": 4,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/pwsj9f/how_can_i_keep_a_module_type_concrete_while/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/pwsj9f/how_can_i_keep_a_module_type_concrete_while/",
          "subreddit_subscribers": 8774,
          "created_utc": 1632782629.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "The OCaml team has the pleasure of celebrating the 175th anniversary of the discovery of Neptune\n\nby announcing the joint releases of OCaml version 4.13.0 and 4.12.1 .\n\n&amp;#x200B;\n\nSome of the highlights in the 4.13.0 release are:\n\n&amp;#x200B;\n\n\\- Safe points: a multicore prerequisite that ensures that ocamlopt-generated code can always be interrupted.\n\n\\- The best-fit GC allocation policy is now the default policy (and many other GC improvements).\n\n\\- Named existential type variables in pattern matching: \\`Showable (type a) (x, show : a \\* (a -&gt; string))\\`.\n\n&amp;#x200B;\n\n\\- Improved error messages for functor application and functor types.\n\n\\- Let-punning for monadic let: \\`let\\* x = x in\\` can be shortened to \\`let\\* x in\\`.\n\n\\- Module type substitutions: \\`SIG with module type T = F(X).S\\`.\n\n&amp;#x200B;\n\n\\- Many other quality of life improvements\n\n\\- Many bug fixes\n\n&amp;#x200B;\n\nThe 4.12.1 release is a collection of safe bug fixes, cherry-picked from the 4.13.0 development\n\ncycle. If you were using OCaml 4.12.0 and cannot yet upgrade to 4.13.0, this release is for you.\n\n&amp;#x200B;\n\nThe full list of changes can be found in the changelogs below.\n\n&amp;#x200B;\n\nThose releases are available as OPAM switches, and as a source download here:\n\n&amp;#x200B;\n\n  [https://github.com/ocaml/ocaml/archive/4.13.0.tar.gz](https://github.com/ocaml/ocaml/archive/4.13.0.tar.gz)\n\n  [https://caml.inria.fr/pub/distrib/ocaml-4.13/](https://caml.inria.fr/pub/distrib/ocaml-4.13/)\n\n&amp;#x200B;\n\nand there:\n\n&amp;#x200B;\n\n  [https://github.com/ocaml/ocaml/archive/4.12.1.tar.gz](https://github.com/ocaml/ocaml/archive/4.12.1.tar.gz)\n\n  [https://caml.inria.fr/pub/distrib/ocaml-4.12/](https://caml.inria.fr/pub/distrib/ocaml-4.12/)",
          "author_fullname": "t2_i49at",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "OCaml 4.13.0",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_pupt01",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 63,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 63,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1632508490.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The OCaml team has the pleasure of celebrating the 175th anniversary of the discovery of Neptune&lt;/p&gt;\n\n&lt;p&gt;by announcing the joint releases of OCaml version 4.13.0 and 4.12.1 .&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Some of the highlights in the 4.13.0 release are:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;- Safe points: a multicore prerequisite that ensures that ocamlopt-generated code can always be interrupted.&lt;/p&gt;\n\n&lt;p&gt;- The best-fit GC allocation policy is now the default policy (and many other GC improvements).&lt;/p&gt;\n\n&lt;p&gt;- Named existential type variables in pattern matching: `Showable (type a) (x, show : a * (a -&amp;gt; string))`.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;- Improved error messages for functor application and functor types.&lt;/p&gt;\n\n&lt;p&gt;- Let-punning for monadic let: `let* x = x in` can be shortened to `let* x in`.&lt;/p&gt;\n\n&lt;p&gt;- Module type substitutions: `SIG with module type T = F(X).S`.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;- Many other quality of life improvements&lt;/p&gt;\n\n&lt;p&gt;- Many bug fixes&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;The 4.12.1 release is a collection of safe bug fixes, cherry-picked from the 4.13.0 development&lt;/p&gt;\n\n&lt;p&gt;cycle. If you were using OCaml 4.12.0 and cannot yet upgrade to 4.13.0, this release is for you.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;The full list of changes can be found in the changelogs below.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Those releases are available as OPAM switches, and as a source download here:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/ocaml/ocaml/archive/4.13.0.tar.gz\"&gt;https://github.com/ocaml/ocaml/archive/4.13.0.tar.gz&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://caml.inria.fr/pub/distrib/ocaml-4.13/\"&gt;https://caml.inria.fr/pub/distrib/ocaml-4.13/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;and there:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/ocaml/ocaml/archive/4.12.1.tar.gz\"&gt;https://github.com/ocaml/ocaml/archive/4.12.1.tar.gz&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://caml.inria.fr/pub/distrib/ocaml-4.12/\"&gt;https://caml.inria.fr/pub/distrib/ocaml-4.12/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "pupt01",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "octachron",
          "discussion_type": null,
          "num_comments": 4,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/pupt01/ocaml_4130/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/pupt01/ocaml_4130/",
          "subreddit_subscribers": 8774,
          "created_utc": 1632508490.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "ocaml",
          "selftext": "i know there aren\u2019t as many resources as other languages, but are there any someone may suggest? thanks!",
          "author_fullname": "t2_z9tff",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "best outside resource to learn ocaml?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/ocaml",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_psmtd7",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 15,
          "total_awards_received": 0,
          "media_embed": {},
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 15,
          "approved_by": null,
          "is_created_from_ads_ui": false,
          "author_premium": false,
          "thumbnail": "",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1632243191.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.ocaml",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;i know there aren\u2019t as many resources as other languages, but are there any someone may suggest? thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": null,
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": true,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": true,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2qh60",
          "author_is_blocked": false,
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "psmtd7",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "ironicookie",
          "discussion_type": null,
          "num_comments": 5,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/ocaml/comments/psmtd7/best_outside_resource_to_learn_ocaml/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/ocaml/comments/psmtd7/best_outside_resource_to_learn_ocaml/",
          "subreddit_subscribers": 8774,
          "created_utc": 1632243191.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      }
    ],
    "before": null
  }
}